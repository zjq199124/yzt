<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maizhiyu.yzt.mapper.BuRecommendMapper">

<!--    <select id="selectSyndromeByDisease" resultType="hashmap">-->
<!--        select-->
<!--            X.*, D.content disease_name-->
<!--        from-->
<!--            dict_disease D-->
<!--                join syn_syndrome X on X.disease_id = D.id-->
<!--        where-->
<!--            D.content LIKE CONCAT('%',#{symptom},'%')-->
<!--    </select>-->

    <select id="selectSyndromeByDisease" resultType="hashmap">
        select
            X.*, D.content disease_name, 0 `count`
        from
            dict_disease D
            join syn_syndrome X on X.disease_id = D.id
        <where>
            <if test="disease != null">
                and D.content LIKE CONCAT('%',#{disease},'%')
            </if>
            <if test="syndrome != null">
                and X.name LIKE CONCAT('%',#{syndrome},'%')
            </if>
        </where>
        <!--         limit 20-->
    </select>

    <select id="selectSyndromeBySymptom" resultType="hashmap">
        select
        *, count(*) `count`
        from
        (
            select
            X.*, D.content disease_name
            from
            syn_syndrome X
            join dict_disease D on D.id = X.disease_id
            where
        <foreach collection="symptoms" item="symptom" index="index" open="(" separator=" or " close=")">
            symptoms LIKE CONCAT('%',#{symptom},'%')
        </foreach>
            ) X
        group by id
    </select>

    <select id="selectRecommendZhongyao" resultType="hashmap">
        select
            X.*,
            A.content disease_name,
            B.name syndrome_name, B.symptoms
        from
            (
                select * from sch_zhongyao
                <where>
                    syndrome_id in
                    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </where>
            ) X

            left join dict_disease A on A.id = X.disease_id
            left join syn_syndrome B on B.id = X.syndrome_id
    </select>

    <select id="selectRecommendChengyao" resultType="hashmap">
        select
            X.*,
            A.content disease_name,
            B.name syndrome_name, B.symptoms
        from
            (
                select * from sch_chengyao
                <where>
                    syndrome_id in
                    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </where>
            ) X
            left join dict_disease A on A.id = X.disease_id
            left join syn_syndrome B on B.id = X.syndrome_id
    </select>

    <select id="selectRecommendXieding" resultType="hashmap">
        select
            X.*,
            A.content disease_name,
            B.name syndrome_name, B.symptoms
        from
            (
                select * from sch_xieding
                <where>
                    syndrome_id in
                    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </where>
            ) X
            left join dict_disease A on A.id = X.disease_id
            left join syn_syndrome B on B.id = X.syndrome_id
    </select>

    <select id="selectRecommendSytech" resultType="hashmap">
        select
            X.*,
            A.content disease_name,
            B.name syndrome_name, B.symptoms,
            C.name sytech_name
        from
            (
                select * from sch_sytech
                <where>
                    syndrome_id in
                    <foreach
                        collection="ids" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </where>
            ) X
            left join dict_disease A on A.id = X.disease_id
            left join syn_syndrome B on B.id = X.syndrome_id
            left join ts_sytech C on C.id = X.sytech_id
    </select>

    <select id="getRecommendZhongyao" resultType="java.util.Map">
        SELECT
        sz.*,
        ds.NAME AS syndrome_name,
        dd.name AS disease_name
        FROM
        sch_zhongyao sz
        INNER JOIN dict_syndrome ds ON sz.syndrome_id = ds.id
        AND ds.is_del = 0
        INNER JOIN dict_disease dd ON sz.disease_id = dd.id
        AND dd.is_del = 0
        WHERE
        sz.disease_id = #{diseaseId}
        AND sz.STATUS = 1

        <if test="ids != null and ids.size > 0">
            AND sz.syndrome_id IN
            <foreach collection="ids" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY
        sz.syndrome_id

    </select>

    <select id="getRecommendChengyao" resultType="java.util.Map">
        SELECT
        sc.*,
        ds.NAME AS syndrome_name,
        dd.name AS disease_name
        FROM
        sch_chengyao sc
        INNER JOIN dict_syndrome ds ON sc.syndrome_id = ds.id
        AND ds.is_del = 0
        INNER JOIN dict_disease dd ON sc.disease_id = dd.id
        AND dd.is_del = 0
        WHERE
        sc.disease_id = #{diseaseId}
        AND sc.STATUS = 1
        <if test="ids != null and ids.size > 0">
        AND sc.syndrome_id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        </if>
        ORDER BY
        sc.syndrome_id
    </select>

    <select id="getRecommendXieding" resultType="java.util.Map">
        SELECT
        sx.*,
        ds.NAME AS syndrome_name,
        dd.name AS disease_name
        FROM
        sch_xieding sx
        INNER JOIN dict_syndrome ds ON sx.syndrome_id = ds.id
        AND ds.is_del = 0
        INNER JOIN dict_disease dd ON sx.disease_id = dd.id
        AND dd.is_del = 0
        WHERE
        sx.disease_id = #{diseaseId}
        AND sx.STATUS = 1
        <if test="ids != null and ids.size > 0">
        AND sx.syndrome_id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        </if>
        ORDER BY
        sx.syndrome_id
    </select>

    <select id="getRecommendSytech" resultType="java.util.Map">

        SELECT
        ss.customer_id as customerId,
        ss.detail,
        ss.disease_id,
        ss.operation,
        ss.recommend,
        ss.syndrome_id,
        ss.sytech_id as sytechId,
        ds.NAME AS syndromeName,
        dd.name AS diseaseName,
        ts.name name
        FROM
        sch_sytech ss
        INNER JOIN dict_syndrome ds ON ss.syndrome_id = ds.id
        AND ds.is_del = 0
        INNER JOIN dict_disease dd ON ss.disease_id = dd.id
        AND dd.is_del = 0
        LEFT JOIN ts_sytech ts ON ts.id = ss.sytech_id
        <if test="customerName != null and customerName != ''">
            LEFT JOIN ms_customer mc ON ss.customer_id = mc.id AND mc.status = 1 AND  mc.username = #{customerName}
        </if>
        WHERE
        ss.disease_id = #{diseaseId}
        AND ss.STATUS = 1
        <if test="sytechId != null">
        AND ss.sytech_id = #{sytechId}
        </if>
        <if test="ids != null and ids.size > 0">
        AND ss.syndrome_id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        </if>
        AND (
            ss.customer_id IS NOT NULL
            OR ( ss.customer_id IS NULL AND ss.recommend = 1 )
        )
        GROUP BY ss.sytech_id
        ORDER BY ss.syndrome_id
    </select>

</mapper>
